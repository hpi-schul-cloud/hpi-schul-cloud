"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[6207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:2},a="Project Structure",i={unversionedId:"e2e-system-tests/ProjectStructure",id:"e2e-system-tests/ProjectStructure",title:"Project Structure",description:"Understanding the project directory layout will help you navigate and manage the Cypress-Cucumber E2E test framework effectively. This section provides a detailed breakdown of the folder structure and the purpose of each component.",source:"@site/docs/e2e-system-tests/1_ProjectStructure.md",sourceDirName:"e2e-system-tests",slug:"/e2e-system-tests/ProjectStructure",permalink:"/docs/e2e-system-tests/ProjectStructure",draft:!1,editUrl:"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/e2e-system-tests/1_ProjectStructure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/e2e-system-tests/GettingStarted"},next:{title:"Code Conventions",permalink:"/docs/e2e-system-tests/CodeConventions"}},l={},c=[{value:"Project Directory Layout",id:"project-directory-layout",level:2},{value:"Explanation of Key Directories and Files",id:"explanation-of-key-directories-and-files",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"project-structure"},"Project Structure"),(0,o.kt)("p",null,"Understanding the project directory layout will help you navigate and manage the Cypress-Cucumber E2E test framework effectively. This section provides a detailed breakdown of the folder structure and the purpose of each component."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"project-directory-layout"},"Project Directory Layout"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"(root)\n|\n|---- .github/\n|     |____ automatic-trigger.yml          # GitHub Actions workflow for automatic triggers\n|     |____ manual-trigger.yml             # GitHub Actions workflow for manual runs\n|     |____ scheduled-trigger.yml          # GitHub Actions workflow for scheduled runs\n|     |____ main.yml                       # GitHub Actions workflow for reusable jobs\n|\n|---- .vscode/                             # Settings for recommended VS Code extensions\n|\n|---- env_variables/\n|     |____ template.env.json              # Template for credentials & environment variables (rename as `local.env.json`)\n|\n|---- cypress/\n|     |___ downloads/                      # Downloaded files during tests\n|     |___ fixtures/                       # Test data files\n|     |___ e2e/                            # Gherkin feature files\n|     |___ screenshots/                    # Screenshots taken on test failures\n|     |___ support/\n|         |___ custom_commands/            # Custom Cypress commands used in tests\n|         |___ pages/                      # Page Object methods for better test modularity\n|         |___ step_definitions/           # Step definitions for feature files\n|         |___ commands.js                 # Custom Cypress commands configuration\n|         |___ e2e.js                      # Global hooks and configurations\n|     |___ videos/                         # Recorded test run videos\n|\n|---- docs/\n|      |___ branch_activation.md\n|      |___ folder_structure.md\n|      |___ executing_tests.md\n|      |___ setup.md\n|      |___ tags.md\n|\n|---- env_variables/\n|      |___ devTemplate.env.json\n|      |___ stagingTemplate.env.json\n|\n|---- reports/                             # HTML reports and related assets\n|\n|---- logs/                                # Logs generated during test runs\n|\n|---- node_modules/                        # Project dependencies\n|\n|---- scripts/\n|     |____ aggregate-json-files.sh        # Script to aggregate JSON files in CI\n|     |____ runSchoolApi.js                # Script to interact with the School API\n|\n|---- .editorconfig                        # Editor configuration for consistent formatting\n|---- .gitattributes                       # Git attributes for line endings and diff\n|---- .prettierignore                      # Files and folders ignored by Prettier\n|---- .prettierrc                          # Prettier configuration for code formatting\n|---- .gitignore                           # Git ignore rules\n|---- reporter.js                          # Custom reporter for generating HTML reports\n|---- cypress.config.json                  # Cypress configuration settings\n|---- LICENSE                              # License file\n|---- package-lock.json                    # npm package lock file\n|---- package.json                         # Project dependencies and scripts\n|---- README.md                            # Project documentation and setup guide\n\n")),(0,o.kt)("h3",{id:"explanation-of-key-directories-and-files"},"Explanation of Key Directories and Files"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},".github/:")," Contains CI/CD workflows for automated, manual, and scheduled test executions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},".vscode/:")," Recommended settings for VS Code extensions to maintain consistent coding standards."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"env_variables/:")," Holds environment configuration files. Duplicate ",(0,o.kt)("inlineCode",{parentName:"li"},"template.env.json")," and rename it to ",(0,o.kt)("inlineCode",{parentName:"li"},"local.env.json")," for local testing."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"cypress/:")," The main directory for Cypress tests."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fixtures/:")," Stores reusable test data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"e2e/:")," Contains all Gherkin .feature files."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"support/:")," Includes custom commands, page objects, and step definitions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"videos/ & screenshots/:")," Captures test artifacts."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"docs/:")," Additional documentation for tags, configurations, and best practices."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reports/:")," Contains HTML reports generated after test runs."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"scripts/:")," Helpful scripts for CI/CD and API interactions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},".prettierrc & .editorconfig:")," Configuration files to enforce consistent coding styles."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"cypress.config.json:")," Central configuration file for Cypress test settings."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reporter.js:")," Custom script to generate detailed HTML reports.")))}p.isMDXComponent=!0}}]);