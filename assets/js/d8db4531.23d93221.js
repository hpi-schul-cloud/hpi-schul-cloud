"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[6207],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2474:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={sidebar_position:2},a="Project Structure",i={unversionedId:"e2e-system-tests/ProjectStructure",id:"e2e-system-tests/ProjectStructure",title:"Project Structure",description:"Understanding the project directory layout will help you navigate and manage the Cypress-Cucumber E2E test framework effectively. This section provides a detailed breakdown of the folder structure and the purpose of each component.",source:"@site/docs/e2e-system-tests/1_ProjectStructure.md",sourceDirName:"e2e-system-tests",slug:"/e2e-system-tests/ProjectStructure",permalink:"/docs/e2e-system-tests/ProjectStructure",draft:!1,editUrl:"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/e2e-system-tests/1_ProjectStructure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/e2e-system-tests/GettingStarted"},next:{title:"Code Conventions",permalink:"/docs/e2e-system-tests/CodeConventions"}},l={},c=[{value:"Project Directory Layout",id:"project-directory-layout",level:2},{value:"Explanation of Key Directories and Files",id:"explanation-of-key-directories-and-files",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"project-structure"},"Project Structure"),(0,o.kt)("p",null,"Understanding the project directory layout will help you navigate and manage the Cypress-Cucumber E2E test framework effectively. This section provides a detailed breakdown of the folder structure and the purpose of each component."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"project-directory-layout"},"Project Directory Layout"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"(root)\n|\n|---- .github/\n|     |____ automatic-trigger.yml          # GitHub Actions workflow for automatic triggers\n|     |____ manual-trigger.yml             # GitHub Actions workflow for manual runs\n|     |____ scheduled-trigger.yml          # GitHub Actions workflow for scheduled runs\n|     |____ main.yml                       # GitHub Actions workflow for reusable jobs\n|\n|---- .vscode/                             # Settings for recommended VS Code extensions\n|\n|---- env_variables/\n|     |____ template.env.json              # Template for credentials & environment variables (rename as `local.env.json`)\n|\n|---- cypress/\n|     |___ downloads/                      # Downloaded files during tests\n|     |___ fixtures/                       # Test data files\n|     |___ e2e/                            # Gherkin feature files\n|     |___ screenshots/                    # Screenshots taken on test failures\n|     |___ support/\n|         |___ custom_commands/            # Custom Cypress commands used in tests\n|         |___ pages/                      # Page Object methods for better test modularity\n|         |___ step_definitions/           # Step definitions for feature files\n|         |___ commands.js                 # Custom Cypress commands configuration\n|         |___ e2e.js                      # Global hooks and configurations\n|     |___ videos/                         # Recorded test run videos\n|\n|---- docs/\n|     |___ tags.md                         # Documentation on test framework usage\n|\n|---- reports/                             # HTML reports and related assets\n|\n|---- logs/                                # Logs generated during test runs\n|\n|---- node_modules/                        # Project dependencies\n|\n|---- scripts/\n|     |____ aggregate-json-files.sh        # Script to aggregate JSON files in CI\n|     |____ runSchoolApi.js                # Script to interact with the School API\n|\n|---- .editorconfig                        # Editor configuration for consistent formatting\n|---- .gitattributes                       # Git attributes for line endings and diff\n|---- .prettierignore                      # Files and folders ignored by Prettier\n|---- .prettierrc                          # Prettier configuration for code formatting\n|---- .gitignore                           # Git ignore rules\n|---- reporter.js                          # Custom reporter for generating HTML reports\n|---- cypress.config.json                  # Cypress configuration settings\n|---- LICENSE                              # License file\n|---- package-lock.json                    # npm package lock file\n|---- package.json                         # Project dependencies and scripts\n|---- README.md                            # Project documentation and setup guide\n\n")),(0,o.kt)("h3",{id:"explanation-of-key-directories-and-files"},"Explanation of Key Directories and Files"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},".github/:")," Contains CI/CD workflows for automated, manual, and scheduled test executions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},".vscode/:")," Recommended settings for VS Code extensions to maintain consistent coding standards."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"env_variables/:")," Holds environment configuration files. Duplicate ",(0,o.kt)("inlineCode",{parentName:"li"},"template.env.json")," and rename it to ",(0,o.kt)("inlineCode",{parentName:"li"},"local.env.json")," for local testing."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"cypress/:")," The main directory for Cypress tests."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fixtures/:")," Stores reusable test data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"e2e/:")," Contains all Gherkin .feature files."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"support/:")," Includes custom commands, page objects, and step definitions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"videos/ & screenshots/:")," Captures test artifacts."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"docs/:")," Additional documentation for tags, configurations, and best practices."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reports/:")," Contains HTML reports generated after test runs."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"scripts/:")," Helpful scripts for CI/CD and API interactions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},".prettierrc & .editorconfig:")," Configuration files to enforce consistent coding styles."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"cypress.config.json:")," Central configuration file for Cypress test settings."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"reporter.js:")," Custom script to generate detailed HTML reports.")))}d.isMDXComponent=!0}}]);