"use strict";(self.webpackChunkdataport_docusaurus=self.webpackChunkdataport_docusaurus||[]).push([[539],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<l;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2398:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const l={sidebar_position:8},a="Colors",s={unversionedId:"nuxt-client/Colors",id:"nuxt-client/Colors",title:"Colors",description:"You can find our custom defined theme colors under /src/themes/base-vuetify.options.js and their overwrites per theme in /src/themes//vuetify.options.js.",source:"@site/docs/nuxt-client/7_Colors.md",sourceDirName:"nuxt-client",slug:"/nuxt-client/Colors",permalink:"/docs/nuxt-client/Colors",draft:!1,editUrl:"https://github.com/hpi-schul-cloud/hpi-schul-cloud.github.io/blob/main/docs/nuxt-client/7_Colors.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Accessibility (A11y)",permalink:"/docs/nuxt-client/Accessibility"},next:{title:"Identifying and Resolving Circular Dependencies",permalink:"/docs/nuxt-client/IdentifyingAndResolvingCircularDependencies"}},i={},c=[{value:"Usage",id:"usage",level:2},{value:"Color Classes",id:"color-classes",level:3},{value:"Examples",id:"examples",level:4},{value:"Use Colors in (S)CSS",id:"use-colors-in-scss",level:3},{value:"Examples",id:"examples-1",level:4},{value:"Definition",id:"definition",level:2},{value:"Rules",id:"rules",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"colors"},"Colors"),(0,o.kt)("p",null,"You can find our custom defined theme colors under ",(0,o.kt)("inlineCode",{parentName:"p"},"/src/themes/base-vuetify.options.js")," and their overwrites per theme in ",(0,o.kt)("inlineCode",{parentName:"p"},"/src/themes/<theme_name>/vuetify.options.js"),"."),(0,o.kt)("p",null,"The colors vuetify provides you can find ",(0,o.kt)("a",{parentName:"p",href:"https://v2.vuetifyjs.com/en/styles/colors/"},"here")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"color-classes"},"Color Classes"),(0,o.kt)("p",null,'All colors defined by vuetify or in our vuetify options generate css classes you can use. To aplly a color variant like lighten1, add a second class like "grey lighten-1".'),(0,o.kt)("h4",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Using a color from vuetify's color palette:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-HTML"},'<div class="blue">\n  Blue background\n</div>\n')),(0,o.kt)("p",null,"Using a color defined in our vuetify options as text color:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-HTML"},'<p class="primary--text">\n  Blue background\n</p>\n')),(0,o.kt)("p",null,"To use a variant of a color, you have to add a second class with the name of the variant:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-HTML"},'<p class="primary--text darken-1">\n  Blue background\n</p>\n')),(0,o.kt)("h3",{id:"use-colors-in-scss"},"Use Colors in (S)CSS"),(0,o.kt)("p",null,"For colors defined in our vuetify options, vuetify generates css variables."),(0,o.kt)("h4",{id:"examples-1"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-SCSS"},".alert {\n  background-color: var(--v-secondary-darken1);\n  color: var(--v-white-base);\n}\n")),(0,o.kt)("p",null,"Colors from vuetify's colors palette (as of now) do not get generated css variables. You will need to access them with map-get."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-SCSS"},".alert {\n  background-color: color: map-get($grey, base);;\n  color: color: map-get($blue, lighten-3);;\n}\n")),(0,o.kt)("h2",{id:"definition"},"Definition"),(0,o.kt)("p",null,"You can define more custom colors in our vuetify options like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-JS"},'...\n"icon-btn": {\n base: colors.grey.darken3,\n},\n"beta-task": {\n base: "#196C9E",\n},\n...\n')),(0,o.kt)("p",null,"As of now you can only use hex values without the alpha property. If a color is only meant for one theme only, please define the color in the relating theme file for our vuetify options."),(0,o.kt)("h3",{id:"rules"},"Rules"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Do not overwrite vuetify colors"),(0,o.kt)("li",{parentName:"ul"},"Use a semantic name to represent the use case"),(0,o.kt)("li",{parentName:"ul"},"Prefer usage via map-get over new color definition, unless you introduce a new color"),(0,o.kt)("li",{parentName:"ul"},"Either define style in template or in scss")))}d.isMDXComponent=!0}}]);